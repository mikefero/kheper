// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"2yqpQfAgAAA=",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
