// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"Z58q/DcAAP//g4AQ834nAAA=",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
