// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"NlrYB13jgEXZTrMX8+76fwEAAP//YufEAyIeAAA=",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
