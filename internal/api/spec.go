// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
