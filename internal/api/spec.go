// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
